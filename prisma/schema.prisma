// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  refreshToken String?   @map("refresh_token")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  likes        ParagraphLike[]
  bookLikes    BookLike[]

  @@map("user")
}

model Book {
  id           Int       @id @default(autoincrement())
  title        String
  author       String
  coverImageUrl String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  paragraphs   Paragraph[]
  likedBy      BookLike[]

  @@map("book")
}

model Paragraph {
  id           Int       @id @default(autoincrement())
  content      String
  order        Int
  bookId       Int

  book         Book      @relation(fields: [bookId], references: [id])

  likes        ParagraphLike[]

  @@map("paragraph")
}

model ParagraphLike {
  id           Int       @id @default(autoincrement())
  userId       Int
  paragraphId  Int

  user         User       @relation(fields: [userId], references: [id])
  paragraph    Paragraph  @relation(fields: [paragraphId], references: [id])

  @@unique([userId, paragraphId])
  @@map("paragraph-like")
}

model BookLike {
  id      Int  @id @default(autoincrement())
  userId  Int
  bookId  Int

  user    User @relation(fields: [userId], references: [id])
  book    Book @relation(fields: [bookId], references: [id])

  @@unique([userId, bookId])
  @@map("book-like")
}
